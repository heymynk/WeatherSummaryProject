<apex:page title="Temperature Chart" controller="LeadInteractionHandler">
    <apex:slds />
    <apex:includeScript value="{!$Resource.chartJs}"/>

    <style>
        body, html {
            margin: 0;
            padding: 0;
            height: 100%;
            overflow: hidden;
        }

        canvas {
            background-color: #f3f3f3;
            width: 100%;
            height: 100%;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
        }

        .chart-container {
            position: relative;
            height: 80%;
            overflow: hidden;
        }

        .description-container {
            padding: 10px;
            background-color: #f3f3f3;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            margin: 0;
            font-size: 11px;
            overflow: hidden;
        }

        .description-container p {
            font-size: 11px;
        }

        .error-message {
            color: red;
            font-size: 14px;
            text-align: center;
            margin-top: 20px;
        }

        /* Spinner styles */
        .spinner-container {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            display: none; /* Hidden by default */
            z-index: 9999; /* Ensure it's on top of everything */
        }
    </style>

<div class="slds-scope">
    <div class="chart-container" style="position: relative; height: 400px;">
            <canvas id="myChart" style="display: none;"></canvas>
        </div>
        <canvas id="myChart" style="display: none;"></canvas>
        <div id="errorMessage" class="error-message" style="display: none;">
            No solar data found.
        </div>
    </div>

    <script>
        window.onload = function() {
            var leadId = '{!$CurrentPage.parameters.Id}';

            function decodeHtml(html) {
                var txt = document.createElement("textarea");
                txt.innerHTML = html;
                return txt.value;
            }

            // Show spinner initially
            document.getElementById('spinnerContainer').style.display = 'block';

            LeadInteractionHandler.getSolarDataJSON(leadId, function(result, event) {
                if (event.status && result) {
                   // console.log('result', result);
                    var decodedResult = decodeHtml(result);
                    //console.log('decoded result:', decodedResult);
                    var solarData = JSON.parse(decodedResult);

                    if (solarData && solarData.poaMonthly && solarData.poaMonthly.length > 0) {
                        plotSolarData(solarData);
                        document.getElementById('descriptionContainer').style.display = 'block';
                    } else {
                        console.log('No data found.');
                        document.getElementById('errorMessage').style.display = 'block';
                    }
                } else {
                    console.error('Error:', event.message);
                    document.getElementById('errorMessage').style.display = 'block';
                }

                // Hide spinner after processing
                document.getElementById('spinnerContainer').style.display = 'none';
            });
        };

        function plotSolarData(solarData) {
            var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];

            var ctx = document.getElementById('myChart').getContext('2d');
            var myChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: months,
                    datasets: [{
                        label: 'POA Monthly(kWh/m2)',
                        data: solarData.poaMonthly,
                        backgroundColor: 'rgba(255, 99, 132, 0.2)',
                        borderColor: 'rgba(255, 99, 132, 1)',
                        borderWidth: 1,
                        fill: true,
                        tension: 0.3
                    }, {
                        label: 'AC Monthly(kWhac)',
                        data: solarData.acMonthly,
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 1,
                        fill: true,
                        tension: 0.3
                    }, {
                        label: 'Solar Radiation Monthly(kWh/m2/day)',
                        data: solarData.solradMonthly,
                        backgroundColor: 'rgba(0, 0, 0, 0.2)',
                        borderColor: 'rgba(0, 0, 0, 1)',
                        borderWidth: 1,
                        fill: true,
                        tension: 0.3
                    }, {
                        label: 'DC Monthly(kWhdc)',
                        data: solarData.dcMonthly,
                        backgroundColor: 'rgba(255, 206, 86, 0.2)',
                        borderColor: 'rgba(255, 206, 86, 1)',
                        borderWidth: 1,
                        fill: true,
                        tension: 0.3
                    }]
                },
                options: {
                    responsive: true,
                    devicePixelRatio: window.devicePixelRatio,
                    animation: {
                        duration: 1000
                    },
                    legend: {
                        display: true,
                        labels: {
                            fontColor: 'black',
                            fontSize: 9
                        }
                    },
                    tooltips: {
                        mode: 'index',
                        intersect: false
                    },
                    hover: {
                        mode: 'nearest',
                        intersect: true
                    },
                    scales: {
                        xAxes: [{
                            display: true,
                            scaleLabel: {
                                display: true,
                                labelString: 'Month',
                                fontColor: 'black',
                                fontSize: 12
                            },
                            ticks: {
                                fontColor: 'black'
                            }
                        }],
                        yAxes: [{
                            display: true,
                            ticks: {
                                display: false 
                            }
                        }]
                    }
                }
            });

            // Show chart after rendering
            document.getElementById('myChart').style.display = 'block';
        }
    </script>
</apex:page>
